spring:
  profiles.active: dev
  application:
    name: audit-service
    
  mail:
    default-encoding: UTF-8
    host: ENC(BiDJPbNehF3MCSqTbQHvfm/5Xv0TNeAF962e08MSZ4tw2D3pf4ysag==)
    username: ENC(BkRSbyEvYfFQHNmKaAklfip9d7m8Gpa80ReAXB0HLzKH9l/zYhMOFQ==)
    password: ENC(uXmTSPW8IzMHKYIhGxtJ0U5TuO4do4J3v5A9b62UhZE=)
    port: 587
    protocol: smtp
    test-connection: false
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true
    mail.smtp.ssl.trust: ENC(BiDJPbNehF3MCSqTbQHvfm/5Xv0TNeAF962e08MSZ4tw2D3pf4ysag==)  
          
info:
  app:
    name: Spring boot audit service Application
    description: ${info.app.name} is Running on ${server.port} port
      
server:
  port: 8080
  
   
paytm.payment:
  sandbox:
    merchantId: ENC(VliTCUZjRRH1JSH0FGicwQPKrXEq4TutqMeZva6e158=)
    merchantKey: ENC(KQJSS3f2xd2DzUhmXea6+bo8WxCndtGOvsQwdhSMaZA=)
    channelId: WEB
    website: DEFAULT
    industryTypeId: Retail
    paytmUrl:  https://securegw.paytm.in/order/process
    callbackUrl: ${webapp.api}pgresponse
    details:
      MID: ${paytm.payment.sandbox.merchantid}
      CHANNEL_ID: ${paytm.payment.sandbox.channelid}
      INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industrytypeid}
      WEBSITE: ${paytm.payment.sandbox.website}
      CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}   
   
#UI client endpoint   
webapp.api: https://audit-ui.herokuapp.com/

---

spring:
  profiles: dev
  
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        format_sql: true
        show_sql: true
  datasource:
    url: jdbc:mysql://localhost:3306/spring_ecosystem?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: ENC(wACjVe/G1xaS2J+keF7rUA==)
    password: ENC(7FEfNjEJsqdR+QTz7LO10g==)
    driverClassName: com.mysql.jdbc.Driver
    data: classpath:data.sql
    initialization-mode: always
    
  security:
      oauth2:
        client:
          registration:
            google:
              clientId: 865549848102-qr8i851t8tu091833jvdp03ptg0c0uu2.apps.googleusercontent.com
              clientSecret: 4tyAS41I7hYb-DCyl_hNK22e
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 727334660641997
              clientSecret: 692478651b2617958314d8893721d716
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 4d5084f65d2e5d7182f5
              clientSecret: 35dc37e138bbd978ba9284a4b7e552480ac9874d
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
      
---
spring:
  profiles: test
  
  h2:
    console.enabled: true
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        show_sql: true
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver
    platform: h2
    #data: classpath:insert-test-data.sql
  
